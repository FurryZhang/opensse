{"name":"Opensse","tagline":"Open sketch search engine","body":"OpenSSE: Open Sketch Search Engine\r\n==================================\r\n\r\nHello, everybody! \r\n\r\nI'm very interested in [Mathias Eitz's works](http://cybertron.cg.tu-berlin.de/eitz/projects/sbsr/) on SIGGRAPH 2012, so I developed OpenSSE, Just for fun.\r\n\r\nThis is a open source sketch search engine for 3D object retrieval based on sketch image as input. In fact, it can retrieve more, such as images, videos, point cloud models and volume models, you just need get their line drawing images than I know you can. \r\n\r\nIn order to clearly show how to work, I used single thread and ascii encoding for file storage. \r\n\r\nZhang Dongdong\r\n\r\nDemo - SketchSearchDemo\r\n=======================\r\n\r\nThis demo deals with mesh models. See more search results, click [demo videos](http://opensse.com).\r\n\r\n![Sketch search demo](http://img.blog.csdn.net/20140515204902125 \"Sketch search demo\")\r\n\r\nHow to compile\r\n==============\r\n\r\nOpenSSE uses [Qt 5.1+](http://qt-project.org/), [OpenCV 2.4.7+](http://opencv.org/) and [boost 1.55.0](http://www.boost.org/), it's a cross-platform library. \r\n\r\nYou need config `INCLUDEPATH` and `LIBS` in `../opensse/opensse.pri` file related your path. \r\n\r\nNow compile it, so easy!\r\n\r\nHow to use\r\n==========\r\n\r\n### Use OpenSSE library\r\n\r\nYou just need include one line in your `.pro` file.\r\n```cpp\r\ninclude(../../opensse.pri)\r\n```\r\n\r\n### Use tools\r\n\r\nThere are a series of tools for you under `opensse/tools/`. When compiled, those tools are under `build-xxx-Release/bin`.\r\n\r\n### Use gui\r\n\r\nThis is gui demo for you under `opensse/gui`.\r\n\r\nHow to train data\r\n=================\r\n\r\n### Database\r\n\r\nDatabase in [my demo](http://opensse.com) comes from [SHREC 2012](http://www.itl.nist.gov/iad/vug/sharp/contest/2012/SBR/data.html), download [3D target dataset](http://www.itl.nist.gov/iad/vug/sharp/contest/2012/SBR/Watertight_dataset.zip)(~112MB). We use models under directory `Watertight_dataset/Extended`.\r\n```shell\r\n$ mv ~/Download/Watertight_dataset/Extended ~/Database/SHREC12/\r\n```\r\n\r\n### Get line drawing views\r\n\r\nUsing my [another project](https://github.com/zddhub/trianglemesh),you will get 102 views for each model.\r\n\r\n### Generate vocabulary\r\n\r\n- Step 1: Generate line draing images filelist\r\n```shell\r\n$ ./generate_filelist -d ~/Database/SHREC12/ -f \"*.jpg\" -o ~/Database/SHREC12/2012_filelist\r\n```\r\n- Step 2: Extract descriptors\r\n```shell\r\n$ ./extract_descriptors -d ~/Database/SHREC12/ -f ~/Database/SHREC12/2012_filelist -o ~/Database/SHREC12/2012_\r\n```\r\nyou will gain two files: `2012_features` and `2012_keypoints`.\r\n- Step 3: Generate vocabulary (optional)\r\n```shell\r\n$ ./generate_vocabulary -f ~/Database/SHREC12/2012_features -n 1000 -o ~/Database/SHREC12/vocabulary\r\n```\r\nIt will take you some times, but only need run once. or use my vocabulary under `../opensse/data/`.\r\n\r\n### Create inverted index file \r\n\r\n- Step 4: Quantize feature\r\n```shell\r\n$ ./quantize -v ~/Database/SHREC12/vocabulary -f ~/Database/SHREC12/2012_features -o ~/Database/SHREC12/2012_samples\r\n```\r\n\r\nWhen dealing with large scale database, we can directly generate samples using extract_quantize tool to reduce disk usage without feature files.\r\n```shell\r\n$ ./extract_and_quantize -d ~/Database/SHREC12/ -f ~/Database/SHREC12/2012_filelist -v ~/Database/SHREC12/2012_filelist -v ~/Database/SHREC12/vocabulary -o ~/Database/SHREC12/2012_samples\r\n```\r\n\r\n- Step 5: Create inverted index file\r\n```shell\r\n$ ./create_index -s ~/Database/SHREC12/2012_samples -o ~/Database/SHREC12/2012_index_file\r\n```\r\nNow all data are ready.\r\n\r\nTest OpenSSE\r\n============\r\n\r\n### Command line\r\nYou can test opensse through command line\r\n```shell\r\n$ ./sketch_search -i ~/Database/SHREC12/2012_index_file -v ~/Database/SHREC12/vocabulary -d ~/Database/SHREC12/ -f ~/Database/SHREC12/2012_filelist -n 10 -o output\r\n```\r\nYou will get a interactive interface, like:\r\n```shell\r\n>> open sketch search :\r\n>> input absolute path, like \"/Users/zdd/zddhub.png\"\r\n>> input q exit\r\n>> good luck!\r\n>> /Users/zdd/Database/SHREC12/Extended/D00057view/1.jpg\r\n0.985509 /Users/zdd/Database/SHREC12/Extended/D00057view/1.jpg\r\n0.953196 /Users/zdd/Database/SHREC12/Extended/D00050view/1.jpg\r\n0.938705 /Users/zdd/Database/SHREC12/Extended/D00041view/1.jpg\r\n0.856004 /Users/zdd/Database/SHREC12/Extended/D00050view/2.jpg\r\n0.852683 /Users/zdd/Database/SHREC12/Extended/D00057view/2.jpg\r\n0.849087 /Users/zdd/Database/SHREC12/Extended/D00041view/2.jpg\r\n0.823276 /Users/zdd/Database/SHREC12/Extended/D00041view/0.jpg\r\n0.821133 /Users/zdd/Database/SHREC12/Extended/D00050view/10.jpg\r\n0.811917 /Users/zdd/Database/SHREC12/Extended/D00057view/10.jpg\r\n0.810096 /Users/zdd/Database/SHREC12/Extended/D00050view/0.jpg\r\n>> q\r\n```\r\n\r\n### Gui Demo - SketchSearchDemo\r\nYou must config `params.json` file using your data path, like:\r\n```json\r\n{\r\n    \"searcher\":\r\n    {\r\n        \"indexfile\": \"/Users/zdd/Database/SHREC12/2012_index_file\",\r\n        \"filelist\": \"/Users/zdd/Database/SHREC12/2012_filelist\",\r\n        \"vocabulary\": \"/Users/zdd/Database/SHREC12/vocabulary\",\r\n        \"rootdir\": \"/Users/zdd/Database/SHREC12\",\r\n        \"results_num\": \"12\",\r\n        \"views_num\": \"102\"\r\n    }\r\n}\r\n```\r\nYou'd better to use the absolute path. And then, set `params.json` in `../opensse/gui/SketchSearchDemo/mainwindow.cpp`:\r\n```cpp\r\nboost::property_tree::read_json(\"/Users/zdd/Database/SHREC12/params.json\", params); \r\n```\r\n\r\nCompiled and You will get [my demo](http://opensse.com). Good luck!\r\n\r\nNotice: To make sure line drawing images correspond to 3d models, please copy `../opensse/data/view/` to you execute file path.\r\n\r\nEvaluation\r\n==========\r\n\r\nYou can use dataset and evaluation methodology to evaluate opensse on [SHREC 2012](http://www.itl.nist.gov/iad/vug/sharp/contest/2012/SBR/index.html), [SHREC 2013](http://www.itl.nist.gov/iad/vug/sharp/contest/2013/SBR/index.html), [SHREC 2014](http://www.itl.nist.gov/iad/vug/sharp/contest/2014/SBR/index.html).\r\n\r\nYou can generate data use `test_search` tool in `tests/test_search`.\r\n```shell\r\nUsage:\r\ntest_search -p paramsfile -i searchfilelist -r searchfileroot -o resultdir\r\n```\r\n\r\nThanks\r\n======\r\n- [Mathias Eitz](http://cybertron.cg.tu-berlin.de/eitz/)\r\n- [Szymon Rusinkiewicz](http://www.cs.princeton.edu/~smr/)\r\n- [SHREC 2012 - 2014](http://www.itl.nist.gov/iad/vug/sharp/contest/2014/Generic3D/index.html)\r\n- [Tilke Judd](http://people.csail.mit.edu/tjudd/)\r\n\r\nLicense\r\n=======\r\n\r\nCode is under the [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0).\r\n\r\nDonations\r\n=========\r\n\r\nI accept tips through [Alipay](http://img.blog.csdn.net/20140506233949640). Scan below qr code to donate:\r\n\r\n![Alipay](http://img.blog.csdn.net/20140506233949640 \"Donation\").\r\n\r\nContact me\r\n==========\r\n\r\nIf you have any question or idea, please [email to me](mailto:zddhub@gmail.com).","google":"UA-48441839-2","note":"Don't delete this file! It's used internally to help with page regeneration."}